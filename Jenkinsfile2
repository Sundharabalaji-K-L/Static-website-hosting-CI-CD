pipeline {
    agent any

    stages {
        stage('checkout output.json') {
            steps {
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/main']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [[$class: 'PathRestriction', excludedRegions: '', includedRegions: 'output.json']],
                    submoduleCfg: [],
                    userRemoteConfigs: [[credentialsId: 'pat-token-github-latest', url: 'https://github.com/Sundharabalaji-1Cloudhub/Infra-repo']]])
            }
        }
        
        stage('Read output.json') {
            steps {
                script {
                    def jsonContent = readFile('output.json')
                    def jsonData = readJSON text: jsonContent
                    def bucketNames = jsonData.bucket_names
                    def cloudfrontId = jsonData.cloudfront_id

                    env.PRIMARY_BUCKET_NAME = bucketNames[0]
                    env.FAILOVER_BUCKET_NAME = bucketNames[1]
                    env.CLOUDFRONT_ID = cloudfrontId
                }
            }
        }
        
        stage('Copy artifacts from CI pipeline') {
            steps {
                copyArtifacts(projectName: 'CI-react', filter: 'build/**/*', fingerprintArtifacts: true)
                sh 'ls -la build'
            }
        }
        stage('uploading files to primary-bucket') {
            steps {
                sh "aws s3 cp  build/  s3://${env.PRIMARY_BUCKET_NAME}/  --recursive"
            }
        }
        stage('uploading files to failover-bucket') {
            steps {
                sh "aws s3 cp  build/  s3://${env.FAILOVER_BUCKET_NAME}/  --recursive"
            }
        }

        stage('Invalidate cloudfront') {
            steps {
                sh "aws cloudfront create-invalidation --distribution-id ${env.CLOUDFRONT_ID} --paths '/*' --region us-east-1"
            }
        }
    }
      post {
        success {
            // Send email notification for success
            emailext (
                subject: "Pipeline Success: ${env.JOB_NAME}",
                body: "React CI Pipeline Success: ${env.JOB_NAME} - Build ${currentBuild.number} has finished successfully. View details: ${env.BUILD_URL}",
                to: "sundharabalaji@1cloudhub.com",
                attachLog: true,
                replyTo: "sundharabalaji@1cloudhub.com",
            )
        }
        failure {
            // Send email notification for failure
            
            emailext (
                subject: "Pipeline Failure: ${env.JOB_NAME}",
                body: "React CI Pipeline Failure: ${env.JOB_NAME} - Build ${currentBuild.number} has failed. View details: ${env.BUILD_URL}",
                to: "sundharabalaji@1cloudhub.com",
                attachLog: true,
                replyTo: "sundharabalaji@1cloudhub.com",
            )
        }
    }
}

